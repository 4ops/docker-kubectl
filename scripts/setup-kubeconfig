#!/bin/sh

SERVICEACCOUNT_DIR=/var/run/secrets/kubernetes.io/serviceaccount

KUBECONFIG_CONTEXT_CLUSTER=${KUBECONFIG_CONTEXT_CLUSTER:-k8s}
KUBECONFIG_CONTEXT_USER=${KUBECONFIG_CONTEXT_USER:-ci}
KUBECONFIG_CONTEXT_NAME=${KUBECONFIG_CONTEXT_NAME:-current}

setup_from_service_account () {
    kubectl config set-cluster "${KUBECONFIG_CONTEXT_CLUSTER}" \
	    --certificate-authority="${SERVICEACCOUNT_DIR}/ca.crt" \
	    --embed-certs=true \
	    --server="https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}" || return 1

    SERVICEACCOUNT_TOKEN=$(cat ${SERVICEACCOUNT_DIR}/token) &&
    kubectl config set-credentials "${KUBECONFIG_CONTEXT_USER}" \
	    --token="${SERVICEACCOUNT_TOKEN}" || return 2

    SERVICEACCOUNT_NAMESPACE=$(cat ${SERVICEACCOUNT_DIR}/namespace) &&
    kubectl config set-context "${KUBECONFIG_CONTEXT_NAME}" \
	    --cluster="${KUBECONFIG_CONTEXT_CLUSTER}" \
	    --user="${KUBECONFIG_CONTEXT_USER}" \
        --namespace="${SERVICEACCOUNT_NAMESPACE}" || return 3

    kubectl config use-context ${KUBECONFIG_CONTEXT_NAME} || return 4

    return 0
}

setup_from_environment () {
    KUBE_CA_CERT=${KUBE_CA_CERT:-$(mktemp)}

    echo "${KUBE_CA_PEM}" > ${KUBE_CA_CERT} &&
    kubectl config set-cluster "${KUBECONFIG_CONTEXT_CLUSTER}" \
	    --certificate-authority="${KUBE_CA_CERT}" \
	    --embed-certs=true \
	    --server="${KUBE_URL}" || return 1

    kubectl config set-credentials "${KUBECONFIG_CONTEXT_USER}" \
	    --token="${KUBE_TOKEN}" || return 2

    NAMESPACE=${NAMESPACE:-"default"} &&
    NAMESPACE=${KUBE_NAMESPACE:-"${NAMESPACE}"} &&
    kubectl config set-context "${KUBECONFIG_CONTEXT_NAME}" \
	    --cluster="${KUBECONFIG_CONTEXT_CLUSTER}" \
	    --user="${KUBECONFIG_CONTEXT_USER}" \
        --namespace="${NAMESPACE}" || return 3

    kubectl config use-context ${KUBECONFIG_CONTEXT_NAME} || return 4

    rm -f ${KUBE_CA_CERT}
}

if [ ! -z ${KUBECONFIG} ]; then
    if [ -f ${KUBECONFIG} ]; then
        kubectl config current-context && exit 0
    fi
else
    export KUBECONFIG="${PWD}/.kube-config.yaml"
fi

if [ ! -z ${KUBE_TOKEN} ]; then
    setup_from_environment && exit 0
fi

if [ -d ${SERVICEACCOUNT_DIR} ]; then
    setup_from_service_account && exit 0
fi

echo "I don't know how to setup kubectl config :("
exit 1
